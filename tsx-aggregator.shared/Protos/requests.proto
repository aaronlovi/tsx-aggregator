syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "decimal-value.proto";

option csharp_namespace = "tsx_aggregator.Services";

service StockDataService {
    rpc GetStocksData(GetStocksDataRequest) returns (GetStocksDataReply);
    rpc GetStocksDetail(GetStocksDetailRequest) returns (GetStocksDetailReply);
    rpc GetStockSearchResults(GetStockSearchResultsRequest) returns (GetStockSearchResultsReply);
}

message GetStocksDataRequest {
    string exchange = 1;
}

message GetStocksDataReply {
    bool success = 1;
    string error_message = 2;
    repeated GetStocksDataReplyItem stocksData = 3;
}

message GetStocksDetailRequest {
    string exchange = 1;
    string instrument_symbol = 2;
}

message GetStocksDetailReply {
    bool success = 1;
    string error_message = 2;
    GetStocksDataReplyItem stockDetail = 3;
}

message GetStocksDataReplyItem {
    string exchange = 1;
    string company_symbol = 2;
    string instrument_symbol = 3;
    string company_name = 4;
    string instrument_name = 5;
    google.protobuf.Timestamp created_date = 6;
    int64 current_num_shares = 7;
    int64 current_total_shareholders_equity = 8;
    int64 current_goodwill = 9;
    int64 current_intangibles = 10;
    int64 current_long_term_debt = 11;
    int64 current_dividends_paid = 12;
    int64 current_retained_earnings = 13;
    int64 oldest_retained_earnings = 14;
    int64 current_book_value = 15;
    int64 average_net_cash_flow = 16;
    int64 average_owner_earnings = 17;
    int32 num_annual_processed_cash_flow_reports = 18;
    DecimalValue per_share_price = 19;
}

message GetStockSearchResultsRequest {
    string search_term = 1;
}

message GetStockSearchResultsReply {
    bool success = 1;
    string error_message = 2;
    repeated GetStockSearchResultsReplyItem searchResults = 3;
}

message GetStockSearchResultsReplyItem {
    string exchange = 1;
    string instrument_symbol = 2;
    string company_name = 3;
}
